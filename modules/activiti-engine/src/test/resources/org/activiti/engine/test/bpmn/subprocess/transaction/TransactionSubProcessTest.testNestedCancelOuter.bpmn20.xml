<?xml version="1.0" encoding="UTF-8"?>
<definitions id="definitions" 
  xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
  xmlns:activiti="http://activiti.org/bpmn"
  targetNamespace="Examples">
	
	<process id="transactionProcess">

		<startEvent id="start" />
		
		<sequenceFlow sourceRef="start"	targetRef="tx" />

		<transaction id="tx">

			<startEvent id="txStart" />
			
			<parallelGateway id="fork" />
			
			<sequenceFlow sourceRef="txStart" targetRef="fork"  />
			<sequenceFlow sourceRef="fork" targetRef="bookFlight"  />
			
			<serviceTask id="bookFlight" activiti:expression="${true}"/>
		
			<boundaryEvent id="compensateBookFlightEvt" attachedToRef="bookFlight">
					<compensateEventDefinition />
			</boundaryEvent>	
					
			<serviceTask id="undoBookFlight" isForCompensation="true" activiti:expression="${true}"/>
			
			<sequenceFlow sourceRef="bookFlight" targetRef="innerTx"  />			
			
			<sequenceFlow sourceRef="fork" targetRef="taskInOuterTx"  />
						
			<userTask id="taskInOuterTx" activiti:assignee="kermit" />
			
			<sequenceFlow sourceRef="taskInOuterTx" targetRef="txFailure"  />			
											
			<transaction id="innerTx">
	
				<startEvent id="innerTxStart" />
				
				<sequenceFlow sourceRef="innerTxStart" targetRef="innerTxFork" />
	
				<parallelGateway id="innerTxFork" />
				
				<sequenceFlow sourceRef="innerTxFork" targetRef="innerTxbookHotel" />
				<sequenceFlow sourceRef="innerTxFork" targetRef="innerTxbookFlight" />
	
				<serviceTask id="innerTxbookHotel" activiti:expression="${true}">
					<multiInstanceLoopCharacteristics isSequential="true">
					  <loopCardinality>5</loopCardinality>
					</multiInstanceLoopCharacteristics>
				</serviceTask>		
					
				<serviceTask id="innerTxbookFlight" activiti:expression="${true}"/>
	
				<boundaryEvent id="innerTxcompensateBookHotelEvt" name="Boundary event" attachedToRef="innerTxbookHotel">
					<compensateEventDefinition />
				</boundaryEvent>	
				
				<boundaryEvent id="innerTxcompensateBookFlightEvt" name="Boundary event" attachedToRef="innerTxbookFlight">
					<compensateEventDefinition />
				</boundaryEvent>
				
				<serviceTask id="innerTxundoBookHotel" isForCompensation="true" activiti:expression="${true}"/>
				
				<serviceTask id="innerTxundoBookFlight" isForCompensation="true" activiti:expression="${true}"/>
				            
				<sequenceFlow sourceRef="innerTxbookHotel" targetRef="innerTxreceive" />
				
				<receiveTask id="innerTxreceive" />
				
				<sequenceFlow sourceRef="innerTxbookFlight" targetRef="innerTxaskCustomer" />
				
				<userTask id="innerTxaskCustomer" activiti:assignee="kermit" />
	
				<exclusiveGateway id="innerTxconfirmed" />
				
				<sequenceFlow sourceRef="innerTxaskCustomer" targetRef="innerTxconfirmed" />
				
				<sequenceFlow sourceRef="innerTxconfirmed" targetRef="innerTxsuccess">
					<conditionExpression>${confirmed}</conditionExpression>
				</sequenceFlow>
				
				<sequenceFlow sourceRef="innerTxconfirmed" targetRef="innerTxfailure">
					<conditionExpression>${not confirmed}</conditionExpression>
				</sequenceFlow>
	
				<endEvent id="innerTxsuccess" />
	
				<endEvent id="innerTxfailure" >
					<cancelEventDefinition id="innerTxcancelTx" />
				</endEvent>
				
				<association associationDirection="One" sourceRef="innerTxcompensateBookHotelEvt" targetRef="innerTxundoBookHotel" />
				
				<association associationDirection="One" sourceRef="innerTxcompensateBookFlightEvt" targetRef="innerTxundoBookFlight" />
	
			</transaction>
			
			<sequenceFlow sourceRef="innerTx" targetRef="success" />		
			
			<endEvent id="success" />
		
			<boundaryEvent attachedToRef="innerTx" id="innerTxCancelled">
				<cancelEventDefinition />			
			</boundaryEvent>
			
			<endEvent id="txFailure" >
				<cancelEventDefinition />
			</endEvent>
			
			<sequenceFlow sourceRef="innerTxCancelled" targetRef="txFailure" />
						
			<association associationDirection="One" sourceRef="compensateBookFlightEvt" targetRef="undoBookFlight" />
			
		</transaction>

		<endEvent id="end" />
		
		<sequenceFlow sourceRef="tx" targetRef="end" />		
		
		<boundaryEvent attachedToRef="tx" id="catchCancelTx">
			<cancelEventDefinition id="calcel"/>			
		</boundaryEvent>
		
		<endEvent id="cancelled" />
		
		<sequenceFlow sourceRef="catchCancelTx" targetRef="cancelled" />
		
	</process>

</definitions>
